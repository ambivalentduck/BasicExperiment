#ifndef DEVICESAMPLER_H
#define DEVICESAMPLER_H

#include <QThread>
#include <QSemaphore>
#include <QMutex>
#include <time.h>
#include <string.h>
#include "point.h"
#include "timestuff.h"
#include <QList>

#define DEVICE_DATA_SIZE 120

class DeviceSampler : public QThread
{
  public:
    enum Device {mouse, falcon} device;
    DeviceSampler(timespec Start, std::string commandline_device, int width, int height);
    struct DeviceData {Point<double> p;double t;};
    void run();    
    void die() {STOP=true; runMutex.lock();}
    void begin() {START=true;}
    bool tryAcquire(int timeout, DeviceData &d);
    
 private:
   timespec s;
   bool STOP, START;
   QMutex runMutex, listMutex;
   int w2,h2;
   QSemaphore readable;
   DeviceData data;
};

#endif

